
(:patch
 (:om-version 0.03)
 (:name "rc tutorial-05a")
 (:doc "")
 (:info
  (:created "2019/09/20 14:57:06")
  (:modified "2019/09/20 15:48:08"))
 (:window (:size (782 644)) (:position (670 158)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 82)
   (:y 444)
   (:w 634)
   (:h 151)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "POLY")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 15.5)
      (:list 250 28.5)
      (:list 750 33.375)
      (:list 1000 37.0)
      (:list 1200 41.875)
      (:list 1400 45.375)
      (:list 1600 48.875)
      (:list 1800 52.375)
      (:list 2000 55.875)
      (:list 2250 59.5)
      (:list 3000 64.375)
      (:list 3500 68.625)
      (:list 3750 72.25)
      (:list 4000 93.875)
      (:list 4250 106.875)
      (:list 4750 111.75)
      (:list 5000 115.375)
      (:list 5200 125.875)
      (:list 5400 129.375)
      (:list 5600 132.875)
      (:list 5800 136.375)
      (:list 6000 139.875)
      (:list 6200 143.375)
      (:list 6400 146.875)
      (:list 6600 150.375)
      (:list 6800 153.875)
      (:list 7000 157.375)
      (:list 7250 161.0)
      (:list 7500 164.625)
      (:list 8000 186.875)
      (:list 8500 197.375)
      (:list 8750 201.0)
      (:list 9000 204.625)
      (:list 9250 208.25)
      (:list 9750 213.125)
      (:list 10000 216.75)
      (:list 10500 224.75)
      (:list 10750 228.375)
      (:list 11000 232.0)
      (:list 11250 235.625)
      (:list 11750 239.875)
      (:list 12000 261.5)
      (:list 12250 269.5)
      (:list 13000 274.375)
      (:list 13333 278.20834)
      (:list 13667 282.0417)
      (:list 14000 285.87503)
      (:list 14750 290.75003)
      (:list 15000 294.37503)
      (:list 15750 299.87503)
      (:list 16000 321.50003)
      (:list 16250 327.00003)
      (:list 16500 330.62503)
      (:list 17000 334.87503)
      (:list 17250 339.12503)
      (:list 17750 344.00003)
      (:list 18000 347.62503)
      (:list 18250 352.50003)
      (:list 18750 356.75003)
      (:list 19000 360.37503)
      (:list 19750 365.25003)
      (:list 20000 386.87503)
      (:list 20750 399.87503)
      (:list 21000 403.50003)
      (:list 21500 407.12503)
      (:list 22000 411.37503)
      (:list 22250 415.62503)
      (:list 22750 419.87503)
      (:list 23000 423.50003)
      (:list 23500 426.62503)
      (:list 24000 449.37503)
      (:list 25000 462.87503))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 27999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset (:list 0 5000 10000 15000 20000 25000 28000))
            (:ldur
             (:list
              (:list 4999)
              (:list 4999)
              (:list 4999)
              (:list 4999)
              (:list 4999)
              (:list 2999)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport (:list nil nil nil nil nil nil))
            (:llegato nil)
            (:tree
             (:list
              7
              (:list
               (:list (:list 4 4) (:list 4))
               (:list (:list 4 4) (:list 1.0 3))
               (:list (:list 4 4) (:list 2.0 2))
               (:list (:list 4 4) (:list 3.0 1))
               (:list (:list 4 4) (:list 4.0))
               (:list (:list 4 4) (:list 4))
               (:list (:list 4 4) (:list 1.0 3)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport (:list nil nil nil nil nil nil)))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 23999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset
             (:list
              0
              250
              4250
              5000
              9000
              9250
              10000
              14000
              14750
              15000
              16500
              17250
              18750
              19000
              19750
              20000
              28000))
            (:ldur
             (:list
              (:list 249)
              (:list 3999)
              (:list 749)
              (:list 3999)
              (:list 249)
              (:list 749)
              (:list 3999)
              (:list 749)
              (:list 249)
              (:list 1499)
              (:list 749)
              (:list 1499)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 3999)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil))
            (:llegato nil)
            (:tree
             (:list
              7
              (:list
               (:list (:list 4 4) (:list (:list 1 (:list 1 3)) 3.0))
               (:list (:list 4 4) (:list (:list 1 (:list 1.0 3)) 3))
               (:list (:list 4 4) (:list 1.0 (:list 1 (:list 1 3)) 2))
               (:list (:list 4 4) (:list 2.0 (:list 1 (:list 3 1)) 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 3 1))))
               (:list (:list 4 4) (:list 4))
               (:list (:list 4 4) (:list -4)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil)))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 23499)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset
             (:list
              0
              250
              750
              1000
              1200
              1400
              1600
              1800
              2000
              2250
              3000
              3500
              3750
              4000
              4250
              4750
              5000
              5200
              5400
              5600
              5800
              6000
              6200
              6400
              6600
              6800
              7000
              7250
              7500
              8000
              8500
              8750
              9000
              9250
              9750
              10000
              10500
              10750
              11000
              11250
              11750
              12250
              13000
              13333
              13667
              14000
              14750
              15000
              15750
              16000
              16250
              16500
              17000
              17250
              17750
              18250
              18750
              19000
              19750
              20000
              20750
              21500
              22250
              22750
              28000))
            (:ldur
             (:list
              (:list 249)
              (:list 499)
              (:list 249)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 249)
              (:list 749)
              (:list 499)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 499)
              (:list 249)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 199)
              (:list 249)
              (:list 249)
              (:list 499)
              (:list 499)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 499)
              (:list 249)
              (:list 499)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 499)
              (:list 499)
              (:list 749)
              (:list 332)
              (:list 333)
              (:list 332)
              (:list 749)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 499)
              (:list 249)
              (:list 499)
              (:list 499)
              (:list 499)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 749)
              (:list 749)
              (:list 749)
              (:list 499)
              (:list 749)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil))
            (:llegato nil)
            (:tree
             (:list
              7
              (:list
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 2 1))
                 (:list 1 (:list 1 1 1 1 1))
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 2 1 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 2 1))
                 (:list 1 (:list 1 1 1 1 1))
                 (:list 1 (:list 1 1 1 1 1))
                 (:list 1 (:list 1 1 2))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2 1 1))
                 (:list 1 (:list 1 2 1))
                 (:list 1 (:list 2 1 1))
                 (:list 1 (:list 1 2 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 1 1 1))
                 (:list 1 (:list 3 1))
                 (:list 1 (:list 3 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1 2))
                 (:list 1 (:list 1 2 1))
                 (:list 1 (:list 1.0 2 1))
                 (:list 1 (:list 3 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 3 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 2 1))
                 (:list 1 (:list 1.0 -1))))
               (:list (:list 4 4) (:list -4)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)
              (:list 3)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil)))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)))))
   (:id 0))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-HIERARCHY" "RC"))
   (:group-id nil)
   (:name "r-hierarchy")
   (:x 363)
   (:y 229)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYERHIGH")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYERLOW")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list121")
   (:x 63)
   (:y 23)
   (:w 159)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 5/4 5/4 5/4 5/4 5/4 5/4 5/4))
   (:id 2))
  (:box
   (:type :special)
   (:reference repeat-n)
   (:group-id nil)
   (:name "repeat-n")
   (:x 5)
   (:y 101)
   (:w 90)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value (:list 4 4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "num")
     (:value 17)
     (:reactive nil)))
   (:outputs (:output (:name "collected results") (:reactive nil)))
   (:id 3))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "PRESET-LAYER" "RC"))
   (:group-id nil)
   (:name "preset-layer")
   (:x 95)
   (:y 55)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHMSEQ")
     (:value (:list 1/4 1/4 1/4 1/4 1/4 1/4 1/4 1/4))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "PRESET-TIMESIGN" "RC"))
   (:group-id nil)
   (:name "preset-timesign")
   (:x 24)
   (:y 141)
   (:w 115)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TIMESIGN-LIST")
     (:value (:list (:list 4 4) (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BEATVALUE1")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SUBDIV1")
     (:value (:list 1 2 3 4 5))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list12")
   (:x 158)
   (:y 114)
   (:w 131)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1) (:list 3/8) (:list 3/16) (:list 1/16)))
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list2")
   (:x 230)
   (:y 141)
   (:w 214)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/16)
     (:list 1/8)
     (:list 3/16)
     (:list 1/20)
     (:list 5/24)
     (:list 1/12)))
   (:id 7))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "VOICE-DOMAIN" "RC"))
   (:group-id nil)
   (:name "voice-domain")
   (:x 107)
   (:y 211)
   (:w 104)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TIMESIGN-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMCELL-LIST1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmcell-list2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmcell-list3")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DECODE-ENGINE" "RC"))
   (:group-id nil)
   (:name "decode-engine")
   (:x 198)
   (:y 395)
   (:w 111)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "output")
     (:value (:symbol "VOICE" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-BEAT-SUBDIV" "RC"))
   (:group-id nil)
   (:name "r-beat-subdiv")
   (:x 477)
   (:y 154)
   (:w 103)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM-LAYER-NR")
     (:value 3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BEATVALUE1")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SUBDIV1")
     (:value (:list 1 2 3 4 5))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "beatvalue2")
     (:value 8)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "subdiv2")
     (:value (:list 1 2 3))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-HIERARCHY" "RC"))
   (:group-id nil)
   (:name "r-hierarchy")
   (:x 450)
   (:y 195)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYERHIGH")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYERLOW")
     (:value 3)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-EQLENGTH" "RC"))
   (:group-id nil)
   (:name "r-eqlength")
   (:x 555)
   (:y 195)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYER1")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER2")
     (:value 3)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :function)
   (:reference append)
   (:group-id nil)
   (:name "append")
   (:x 439)
   (:y 302)
   (:w 178)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "RULES->PMC" "RC"))
   (:group-id nil)
   (:name "rules->pmc")
   (:x 477)
   (:y 342)
   (:w 93)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DOMAINS->PMC" "RC"))
   (:group-id nil)
   (:name "domains->pmc")
   (:x 82)
   (:y 263)
   (:w 110)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "N-VAR")
     (:value 80)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:library "OMCS")
   (:type :function)
   (:reference (:symbol "PMC-ENGINE" "OMCS"))
   (:group-id nil)
   (:name "pmc-engine")
   (:x 175)
   (:y 345)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "S-SPACE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "heuristic-rules")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "fwc-rules")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "sols-mode")
     (:value :once)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rnd?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "print-fl")
     (:value t)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 632)
   (:y 226)
   (:w 52)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:om-version 0.03)
     (:name "mypatch")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (842 596)) (:position (374 368)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 33)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 123)
       (:y 486)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input1")
       (:x 267)
       (:y 33)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:comment
       (:x 214)
       (:y 410)
       (:w 542)
       (:h 91)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "This rule check if the variable belongs to layer 2 or not. If not, it always gives true as an output (i.e. it will not affect other layers than number 2). If it does belong to layer 2, it checks if the element is identical to the one in layer 2 immediately before it. If it is identical, the output is false, otherwise true.

The rule will not allow repetitions of the same element in layer 2.")
       (:id 3))
      (:comment
       (:x 543)
       (:y 37)
       (:w 207)
       (:h 314)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Helvetica") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "A user defined rule always has 2 inputs. They are normally not accessed directly, but are used by the tools in the \"user rule tools\" menu to give the user access to different things. A basic example is the box \"get-this-cell\":

Get-this-cell only has 1 input, and it should be connected to the second input to the patch. It outputs the variable (i.e. the element from the domain) that is beeing checked at the moment. 

Get-last-cell has 2 inputs. They should be connected to the 2 inputs to the patch. It outputs the variable in the same layer as the one beeing checked at the moment, immediately before the one beeing checked. The engine has thus already accepted this variable as true according to all rules (but might now reconsider that decision...).

Get-layer-number outputs the layer number for the variable beeing checked.")
       (:id 4))
      (:comment
       (:x 314)
       (:y 69)
       (:w 191)
       (:h 43)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Helvetica") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "<-- The second input gives the variable beeing checked for the moment (as an object).")
       (:id 5))
      (:comment
       (:x 48)
       (:y 61)
       (:w 215)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Helvetica") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "<-- The first input gives the index  number for the variable the search engine is checking for the moment. This is used internally to keep track on where the engine is in the search.")
       (:id 6))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux")
       (:x 152)
       (:y 378)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 7))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 124)
       (:y 410)
       (:w 67)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "number")
       (:x 449)
       (:y 232)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 9))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 423)
       (:y 264)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "TEST-NOT-EQUAL" "RC"))
       (:group-id nil)
       (:name "test-not-equal")
       (:x 98)
       (:y 298)
       (:w 108)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "EV1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EV2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "GET-LAYERNUMBER" "RC"))
       (:group-id nil)
       (:name "get-layernumber")
       (:x 381)
       (:y 183)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "GET-LAST-CELL" "RC"))
       (:group-id nil)
       (:name "get-last-cell")
       (:x 24)
       (:y 183)
       (:w 95)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "INDEXX")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "GET-THIS-CELL" "RC"))
       (:group-id nil)
       (:name "get-this-cell")
       (:x 205)
       (:y 183)
       (:w 95)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 13 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 14 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 8 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 10 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 8 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 11 :in 1))
       (:attributes (:color nil :style nil :modif nil))))))
   (:group-id nil)
   (:name "mypatch")
   (:x 618)
   (:y 108)
   (:w 80)
   (:h 76)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 18))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 7)
   (:y 66)
   (:w 40)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 4 4))
   (:id 19))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 47)
   (:y 66)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 17)
   (:id 20)))
 (:connections
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 8 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 8 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 8 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 0 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 13 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 16 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 13 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 3 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))