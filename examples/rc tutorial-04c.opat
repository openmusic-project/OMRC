
(:patch
 (:om-version 0.03)
 (:name "rc tutorial-04c")
 (:doc "")
 (:info
  (:created "2019/09/20 12:45:09")
  (:modified "2019/09/20 15:48:29"))
 (:window (:size (834 674)) (:position (531 238)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux6")
   (:x 170)
   (:y 290)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux5")
   (:x 435)
   (:y 216)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 396)
   (:y 168)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux3")
   (:x 61)
   (:y 37)
   (:w 200)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 4 4)
     (:list 3 8)
     (:list 3 4)
     (:list 4 4)
     (:list 3 8)
     (:list 3 4)))
   (:id 3))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "PRESET-TIMESIGN" "RC"))
   (:group-id nil)
   (:name "preset-timesign")
   (:x 28)
   (:y 77)
   (:w 115)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TIMESIGN-LIST")
     (:value
      (:list
       (:list 4 4)
       (:list 3 8)
       (:list 3 4)
       (:list 4 4)
       (:list 3 8)
       (:list 3 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BEATVALUE1")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SUBDIV1")
     (:value (:list 1 2 3 4 5))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "beatvalue2")
     (:value 8)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "subdiv2")
     (:value (:list 1 2 3))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list12")
   (:x 96)
   (:y 109)
   (:w 105)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 5/4) (:list 3/4) (:list 3/8)))
   (:id 5))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 586)
   (:y 293)
   (:w 168)
   (:h 67)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "POLY")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (650 300)) (:position (333 345)))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7)
      (:list 4000 30)
      (:list 5500 187/4)
      (:list 8500 269/4)
      (:list 12500 361/4)
      (:list 14000 107)
      (:list 17000 247/2)
      (:list 20000 140)
      (:list 23000 313/2)
      (:list 26000 173)
      (:list 29000 379/2)
      (:list 32000 206)
      (:list 35000 445/2)
      (:list 38000 239)
      (:list 41000 511/2)
      (:list 44000 272)
      (:list 47000 577/2)
      (:list 50000 305)
      (:list 53000 643/2)
      (:list 56000 338)
      (:list 59000 709/2)
      (:list 62000 371)
      (:list 65000 775/2)
      (:list 68000 404)
      (:list 71000 841/2)
      (:list 74000 437))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 1000)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic nil)
            (:lonset (:list 77000))
            (:ldur nil)
            (:lvel nil)
            (:loffset nil)
            (:lchan nil)
            (:lport nil)
            (:llegato nil)
            (:tree
             (:list
              26
              (:list
               (:list (:list 4 4) (:list -4))
               (:list (:list 3 8) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 4 4) (:list -4))
               (:list (:list 3 8) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3))
               (:list (:list 3 4) (:list -3)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel nil) (:loffset nil) (:lchan nil) (:lport nil))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)))))
   (:id 6))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "t")
   (:x 638)
   (:y 164)
   (:w 59)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:symbol "VOICE" "RC"))
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux2")
   (:x 625)
   (:y 196)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 60)
   (:id 8))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "VIEW-PRESETS" "RC"))
   (:group-id nil)
   (:name "view-presets")
   (:x 596)
   (:y 239)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "tempo")
     (:value 60)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "output")
     (:value (:symbol "SIMPLE" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-SYNC-OVER-BARLINE" "RC"))
   (:group-id nil)
   (:name "r-sync-over-barline")
   (:x 191)
   (:y 243)
   (:w 131)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM-LAYER-NR")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALLOWED-SYNCOPES")
     (:value (:list 0 1/8))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "special-case")
     (:value (:symbol "NO-EMPTY-M" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux1")
   (:x 354)
   (:y 168)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 318)
   (:y 168)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 12))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DECODE-ENGINE" "RC"))
   (:group-id nil)
   (:name "decode-engine")
   (:x 133)
   (:y 394)
   (:w 111)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "output")
     (:value (:symbol "VOICE" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 23)
   (:y 468)
   (:w 544)
   (:h 144)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "POLY")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 11.5)
      (:list 1000 22.0)
      (:list 1250 27.5)
      (:list 2000 32.375)
      (:list 2500 37.25)
      (:list 2750 40.875)
      (:list 3000 44.5)
      (:list 3250 50.0)
      (:list 4000 74.875)
      (:list 4500 80.375)
      (:list 4750 84.625)
      (:list 5000 88.25)
      (:list 5167 91.666664)
      (:list 5333 95.08333)
      (:list 5500 118.49999)
      (:list 5750 123.99999)
      (:list 6000 127.62499)
      (:list 6250 131.875)
      (:list 6500 135.5)
      (:list 7500 139.75)
      (:list 7750 143.375)
      (:list 8000 147.0)
      (:list 8250 150.625)
      (:list 8500 174.25)
      (:list 9000 178.5)
      (:list 9500 182.75)
      (:list 10250 187.0)
      (:list 10500 190.625)
      (:list 11000 194.25)
      (:list 11500 198.5)
      (:list 11750 202.75)
      (:list 12500 227.625)
      (:list 13000 231.875)
      (:list 13250 236.125)
      (:list 13500 239.75)
      (:list 14000 263.375)
      (:list 14250 273.875)
      (:list 15000 278.75)
      (:list 15500 283.625)
      (:list 15750 287.25)
      (:list 16000 290.875)
      (:list 16500 294.5)
      (:list 16750 298.125)
      (:list 17000 313.75)
      (:list 17750 324.25)
      (:list 18000 327.875)
      (:list 19000 331.5)
      (:list 19333 337.0)
      (:list 19667 340.83334)
      (:list 20000 356.6667)
      (:list 20250 362.1667)
      (:list 20500 365.7917)
      (:list 20750 370.0417)
      (:list 21000 373.6667)
      (:list 23000 393.6667))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 20499)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset (:list 0 3000 6000 9000 14000 19000 26000))
            (:ldur
             (:list
              (:list 2999)
              (:list 2999)
              (:list 2999)
              (:list 4999)
              (:list 4999)
              (:list 1499)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport (:list nil nil nil nil nil nil))
            (:llegato nil)
            (:tree
             (:list
              9
              (:list
               (:list (:list 4 4) (:list 3 1))
               (:list (:list 3 8) (:list 3.0))
               (:list (:list 3 4) (:list (:list 1 (:list 1.0 1)) 2.0))
               (:list (:list 4 4) (:list (:list 1 (:list 1.0 1)) 3.0))
               (:list (:list 3 8) (:list 3.0))
               (:list (:list 3 4) (:list 3))
               (:list (:list 3 4) (:list 2.0 1))
               (:list (:list 3 4) (:list (:list 1 (:list 1.0 -1)) -2))
               (:list (:list 3 4) (:list -3)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport (:list nil nil nil nil nil nil)))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 20749)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset
             (:list
              0
              1250
              2500
              2750
              3000
              3250
              4000
              4750
              5000
              5167
              5333
              5500
              5750
              6000
              6250
              7500
              7750
              8000
              8250
              9000
              10250
              11000
              11750
              12500
              13250
              14000
              14250
              15500
              15750
              16500
              16750
              17000
              17750
              19333
              19667
              20000
              20250
              20500
              26000))
            (:ldur
             (:list
              (:list 1249)
              (:list 1249)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 749)
              (:list 749)
              (:list 249)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 1249)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 749)
              (:list 1249)
              (:list 749)
              (:list 749)
              (:list 749)
              (:list 749)
              (:list 749)
              (:list 249)
              (:list 1249)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 249)
              (:list 749)
              (:list 1249)
              (:list 333)
              (:list 332)
              (:list 249)
              (:list 249)
              (:list 249)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil))
            (:llegato nil)
            (:tree
             (:list
              9
              (:list
               (:list
                (:list 4 4)
                (:list
                 1
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1 3))))
               (:list
                (:list 3 8)
                (:list
                 1
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1 1 1))))
               (:list
                (:list 3 4)
                (:list
                 (:list 1 (:list 1 1 1 1))
                 1.0
                 (:list 1 (:list 1 1 1 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 3 8)
                (:list 1 (:list 1 (:list 1.0 1)) 1.0))
               (:list
                (:list 3 4)
                (:list
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 2.0 1 1))))
               (:list
                (:list 3 4)
                (:list
                 (:list 1 (:list 3 1))
                 1.0
                 (:list 1 (:list -1 1 1))))
               (:list
                (:list 3 4)
                (:list (:list 1 (:list 1 1 1 -1)) -2))
               (:list (:list 3 4) (:list -3)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil)))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)))))
   (:id 14))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-BEAT-SUBDIV" "RC"))
   (:group-id nil)
   (:name "r-beat-subdiv")
   (:x 435)
   (:y 275)
   (:w 103)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM-LAYER-NR")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BEATVALUE1")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SUBDIV1")
     (:value (:list 1 2 3 4 5))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "beatvalue2")
     (:value 8)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "subdiv2")
     (:value (:list 1 2 3))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-EQLENGTH" "RC"))
   (:group-id nil)
   (:name "r-eqlength")
   (:x 387)
   (:y 243)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYER1")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER2")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-HIERARCHY" "RC"))
   (:group-id nil)
   (:name "r-hierarchy")
   (:x 311)
   (:y 216)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYERHIGH")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYERLOW")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference append)
   (:group-id nil)
   (:name "append")
   (:x 330)
   (:y 314)
   (:w 75)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "RULES->PMC" "RC"))
   (:group-id nil)
   (:name "rules->pmc")
   (:x 316)
   (:y 354)
   (:w 93)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list11")
   (:x 210)
   (:y 88)
   (:w 179)
   (:h 60)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/20 1/20 1/20 1/20 1/20)
     (:list 5/16)
     (:list -1/12 1/12 1/12)
     (:list 1/24 1/24 1/24 1/16)
     (:list 3/16)
     (:list 1/16)))
   (:id 20))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "VOICE-DOMAIN" "RC"))
   (:group-id nil)
   (:name "voice-domain")
   (:x 61)
   (:y 164)
   (:w 104)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TIMESIGN-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMCELL-LIST1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmcell-list2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DOMAINS->PMC" "RC"))
   (:group-id nil)
   (:name "domains->pmc")
   (:x 36)
   (:y 243)
   (:w 110)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "N-VAR")
     (:value 40)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:library "OMCS")
   (:type :function)
   (:reference (:symbol "PMC-ENGINE" "OMCS"))
   (:group-id nil)
   (:name "pmc-engine")
   (:x 110)
   (:y 322)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "S-SPACE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "heuristic-rules")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "fwc-rules")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "sols-mode")
     (:value :once)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rnd?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "print-fl")
     (:value t)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 23 :in 6))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 16 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 21 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 21 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 9 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 6 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 18 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 18 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 18 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 23 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 21 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 22 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))