
(:patch
 (:om-version 0.03)
 (:name "rc tutorial-04b")
 (:doc "")
 (:info
  (:created "2019/09/20 12:43:16")
  (:modified "2019/09/20 15:48:34"))
 (:window (:size (814 628)) (:position (1035 335)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 446)
   (:y 190)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux3")
   (:x 407)
   (:y 127)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 1))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 541)
   (:y 301)
   (:w 195)
   (:h 86)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "POLY")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (1077 303)) (:position (291 299)))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 2000 15.5)
      (:list 4000 29.5)
      (:list 5000 35.0)
      (:list 8000 51.5)
      (:list 10000 59.5)
      (:list 11000 65.0)
      (:list 11500 70.5)
      (:list 12000 80.75)
      (:list 13000 85.0)
      (:list 13500 89.25)
      (:list 14000 93.5)
      (:list 16000 103.75)
      (:list 17000 108.0)
      (:list 17500 112.25)
      (:list 18000 116.5)
      (:list 19000 120.75)
      (:list 19500 125.0)
      (:list 20000 135.25)
      (:list 21000 139.5)
      (:list 21500 143.75)
      (:list 22000 148.0)
      (:list 22500 152.25)
      (:list 23000 156.5)
      (:list 24000 166.75)
      (:list 25000 171.0)
      (:list 25500 175.25)
      (:list 26000 179.5)
      (:list 27000 183.75)
      (:list 27500 188.0)
      (:list 28000 198.25)
      (:list 29000 202.5)
      (:list 31000 210.5)
      (:list 32000 222.0)
      (:list 35000 227.5)
      (:list 36000 239.0)
      (:list 37000 244.5)
      (:list 39000 252.5)
      (:list 40000 264.0)
      (:list 43000 274.5)
      (:list 44000 286.0)
      (:list 45000 291.5)
      (:list 46000 297.0)
      (:list 46500 302.5)
      (:list 47000 306.75)
      (:list 48000 317.0)
      (:list 48500 321.25)
      (:list 49000 325.5)
      (:list 52000 335.75)
      (:list 52500 339.5)
      (:list 53000 343.75))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 52499)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset
             (:list
              0
              2000
              4000
              5000
              8000
              10000
              11500
              13500
              17500
              19500
              21500
              22500
              25500
              27500
              29000
              31000
              35000
              37000
              39000
              40000
              43000
              45000
              46500
              48500
              56000))
            (:ldur
             (:list
              (:list 1999)
              (:list 1999)
              (:list 999)
              (:list 2999)
              (:list 1999)
              (:list 1499)
              (:list 1999)
              (:list 3999)
              (:list 1999)
              (:list 1999)
              (:list 999)
              (:list 2999)
              (:list 1999)
              (:list 1499)
              (:list 1999)
              (:list 3999)
              (:list 1999)
              (:list 1999)
              (:list 999)
              (:list 2999)
              (:list 1999)
              (:list 1499)
              (:list 1999)
              (:list 3999)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil))
            (:llegato nil)
            (:tree
             (:list
              14
              (:list
               (:list (:list 4 4) (:list 2 2))
               (:list (:list 4 4) (:list 1 3))
               (:list (:list 4 4) (:list 2 1 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list 1.0 (:list 1 (:list 1.0 1)) 2.0))
               (:list
                (:list 4 4)
                (:list
                 1.0
                 (:list 1 (:list 1.0 1))
                 1.0
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list
                 1.0
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))
                 1.0))
               (:list
                (:list 4 4)
                (:list
                 1.0
                 (:list 1 (:list 1.0 1))
                 1.0
                 (:list 1 (:list 1.0 1))))
               (:list (:list 4 4) (:list 1.0 2 1))
               (:list (:list 4 4) (:list 3.0 1))
               (:list (:list 4 4) (:list 1.0 2 1))
               (:list (:list 4 4) (:list 3 1))
               (:list
                (:list 4 4)
                (:list 1.0 1 (:list 1 (:list 1.0 1)) 1.0))
               (:list (:list 4 4) (:list (:list 1 (:list 1.0 1)) 3.0))
               (:list
                (:list 4 4)
                (:list (:list 1 (:list 1.0 -1)) -3)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil)))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)))))
   (:id 2))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "t")
   (:x 653)
   (:y 204)
   (:w 59)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:symbol "VOICE" "RC"))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux2")
   (:x 640)
   (:y 172)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 60)
   (:id 4))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "VIEW-PRESETS" "RC"))
   (:group-id nil)
   (:name "view-presets")
   (:x 611)
   (:y 236)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "tempo")
     (:value 60)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "output")
     (:value (:symbol "SIMPLE" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-SYNC-OVER-BARLINE" "RC"))
   (:group-id nil)
   (:name "r-sync-over-barline")
   (:x 206)
   (:y 223)
   (:w 131)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM-LAYER-NR")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALLOWED-SYNCOPES")
     (:value (:list 0 1/8))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "special-case")
     (:value (:symbol "NO-EMPTY-M" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "PRESET-LAYER" "RC"))
   (:group-id nil)
   (:name "preset-layer")
   (:x 143)
   (:y 49)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHMSEQ")
     (:value (:list 1/4 1/4 1/4 1/4 1/4 1/4 1/4 1/4))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux1")
   (:x 348)
   (:y 127)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 8))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 312)
   (:y 127)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 9))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DECODE-ENGINE" "RC"))
   (:group-id nil)
   (:name "decode-engine")
   (:x 144)
   (:y 351)
   (:w 111)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "output")
     (:value (:symbol "VOICE" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 22)
   (:y 430)
   (:w 613)
   (:h 148)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "POLY")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 11.5)
      (:list 1000 19.5)
      (:list 1250 25.0)
      (:list 1500 28.625)
      (:list 1750 32.25)
      (:list 2000 55.875)
      (:list 2250 63.875)
      (:list 3000 68.75)
      (:list 3250 72.375)
      (:list 4000 77.25)
      (:list 4250 82.75)
      (:list 5000 87.625)
      (:list 5250 93.125)
      (:list 6000 118.0)
      (:list 6500 123.5)
      (:list 6750 127.125)
      (:list 7000 130.75)
      (:list 7250 134.375)
      (:list 7500 158.0)
      (:list 8000 163.5)
      (:list 8250 167.75)
      (:list 8500 171.375)
      (:list 9000 175.625)
      (:list 9250 179.25)
      (:list 9500 182.875)
      (:list 10000 187.125)
      (:list 10250 191.375)
      (:list 10500 215.0)
      (:list 10750 219.25)
      (:list 11000 222.875)
      (:list 11500 246.5)
      (:list 11833 254.5)
      (:list 12167 258.3333)
      (:list 12500 262.16666)
      (:list 12750 265.79166)
      (:list 13000 269.41666)
      (:list 13250 273.04166)
      (:list 13500 296.66666)
      (:list 13750 302.16666)
      (:list 14000 305.79166)
      (:list 14500 329.41666)
      (:list 15000 334.91666)
      (:list 15250 338.04166)
      (:list 15500 341.66666))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 16499)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset
             (:list 0 2000 4000 5000 8000 10000 11500 13500 16500))
            (:ldur
             (:list
              (:list 1999)
              (:list 1999)
              (:list 999)
              (:list 2999)
              (:list 1999)
              (:list 1499)
              (:list 1999)
              (:list 2999)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport (:list nil nil nil nil nil nil nil nil))
            (:llegato nil)
            (:tree
             (:list
              8
              (:list
               (:list (:list 4 8) (:list 4))
               (:list (:list 4 4) (:list 2 1 1))
               (:list (:list 3 8) (:list 3.0))
               (:list
                (:list 3 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 1.0
                 (:list 1 (:list 1.0 1))))
               (:list (:list 2 8) (:list 2.0))
               (:list (:list 2 4) (:list 2))
               (:list (:list 2 8) (:list 2))
               (:list (:list 2 4) (:list 2.0)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)
              (:list 1)))
            (:lport (:list nil nil nil nil nil nil nil nil)))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 15249)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)))
            (:lonset
             (:list
              0
              1250
              1500
              1750
              2000
              2250
              3000
              3250
              4000
              4250
              5000
              5250
              6500
              6750
              7000
              7250
              8000
              8250
              9000
              9250
              10000
              10250
              10500
              10750
              11833
              12167
              12500
              12750
              13000
              13250
              13500
              13750
              15000
              16500))
            (:ldur
             (:list
              (:list 1249)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 1249)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 749)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 749)
              (:list 333)
              (:list 332)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 249)
              (:list 1249)
              (:list 249)))
            (:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil))
            (:llegato nil)
            (:tree
             (:list
              8
              (:list
               (:list
                (:list 4 8)
                (:list
                 2
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 1 3))))
               (:list
                (:list 3 8)
                (:list
                 1.0
                 (:list 1 (:list 1 1))
                 (:list 1 (:list 1 1))))
               (:list
                (:list 3 4)
                (:list
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 2.0 1 1))))
               (:list (:list 2 8) (:list (:list 1 (:list 1 1)) 1.0))
               (:list
                (:list 2 4)
                (:list
                 (:list 1 (:list -1 1 1))
                 (:list 1 (:list 1 1 1 1))))
               (:list (:list 2 8) (:list (:list 1 (:list 1 1)) 1.0))
               (:list
                (:list 2 4)
                (:list (:list 1 (:list 2.0 1 -1)) -1)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel
             (:list
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)
              (:list 80)))
            (:loffset
             (:list
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)
              (:list 0)))
            (:lchan
             (:list
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)
              (:list 2)))
            (:lport
             (:list
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil
              nil)))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)))))
   (:id 11))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-BEAT-SUBDIV" "RC"))
   (:group-id nil)
   (:name "r-beat-subdiv")
   (:x 446)
   (:y 236)
   (:w 103)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM-LAYER-NR")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BEATVALUE1")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SUBDIV1")
     (:value (:list 1 2 3 4 5))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "beatvalue2")
     (:value 8)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "subdiv2")
     (:value (:list 1 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-EQLENGTH" "RC"))
   (:group-id nil)
   (:name "r-eqlength")
   (:x 398)
   (:y 159)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYER1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER2")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-HIERARCHY" "RC"))
   (:group-id nil)
   (:name "r-hierarchy")
   (:x 305)
   (:y 159)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYERHIGH")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYERLOW")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :function)
   (:reference append)
   (:group-id nil)
   (:name "append")
   (:x 324)
   (:y 291)
   (:w 75)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "RULES->PMC" "RC"))
   (:group-id nil)
   (:name "rules->pmc")
   (:x 310)
   (:y 331)
   (:w 93)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list11")
   (:x 248)
   (:y 49)
   (:w 239)
   (:h 52)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/20 1/20 1/20 1/20 1/20)
     (:list 5/16)
     (:list -1/12 1/12 1/12)
     (:list 1/24 1/24 1/24 1/16)
     (:list 3/16)
     (:list 1/16)))
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list1")
   (:x 67)
   (:y 5)
   (:w 301)
   (:h 44)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     1/2
     1/2
     1/4
     3/4
     1/2
     3/8
     1/2
     1
     1/2
     1/2
     1/4
     3/4
     1/2
     3/8
     1/2
     1
     1/2
     1/2
     1/4
     3/4
     1/2
     3/8
     1/2
     1))
   (:id 18))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 13)
   (:y 49)
   (:w 103)
   (:h 46)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 4 4)
     (:list 3 4)
     (:list 2 4)
     (:list 4 8)
     (:list 2 8)
     (:list 3 8)))
   (:id 19))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "VOICE-DOMAIN" "RC"))
   (:group-id nil)
   (:name "voice-domain")
   (:x 67)
   (:y 121)
   (:w 104)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TIMESIGN-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMCELL-LIST1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmcell-list2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DOMAINS->PMC" "RC"))
   (:group-id nil)
   (:name "domains->pmc")
   (:x 42)
   (:y 190)
   (:w 110)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "N-VAR")
     (:value 40)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:library "OMCS")
   (:type :function)
   (:reference (:symbol "PMC-ENGINE" "OMCS"))
   (:group-id nil)
   (:name "pmc-engine")
   (:x 121)
   (:y 283)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "S-SPACE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 5 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 5 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 2 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 20 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 14 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 15 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 15 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 22 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 20 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 20 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 21 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 22 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))