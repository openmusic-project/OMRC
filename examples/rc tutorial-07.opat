
(:patch
 (:om-version 0.03)
 (:name "rc tutorial-07")
 (:doc "")
 (:info
  (:created "2019/09/20 15:23:15")
  (:modified "2019/09/20 15:47:50"))
 (:window (:size (1100 584)) (:position (587 237)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "RULES->CSOLVER" "RC"))
   (:group-id nil)
   (:name "rules->csolver")
   (:x 579)
   (:y 238)
   (:w 106)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux7")
   (:x 799)
   (:y 69)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 1))
  (:box
   (:library "OMRC")
   (:type :object)
   (:reference (:symbol "STORED-SECTION" "RC"))
   (:group-id nil)
   (:name "STORED-SECTION1")
   (:x 851)
   (:y 9)
   (:w 190)
   (:h 94)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "STORED-SECTION1")
   (:display :text)
   (:showname t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMESIGNS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER4")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARCHIVEINFO")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TIMESIGNS") (:reactive nil))
    (:output (:name "LAYER1") (:reactive nil))
    (:output (:name "LAYER2") (:reactive nil))
    (:output (:name "LAYER3") (:reactive nil))
    (:output (:name "LAYER4") (:reactive nil))
    (:output (:name "ARCHIVEINFO") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "STORED-SECTION" "RC"))
     (:slots
      ((:timesigns (:list (:list 3 4)))
       (:layer1 (:list 0))
       (:layer2 (:list 0 3/16 1/4 5/8 11/16))
       (:layer3
        (:list 0 1/16 1/8 3/16 1/4 1/3 5/12 1/2 9/16 5/8 11/16))
       (:layer4 nil)
       (:archiveinfo (:list 0 3/4 0))))))
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux6")
   (:x 775)
   (:y 100)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux5")
   (:x 752)
   (:y 69)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux4")
   (:x 935)
   (:y 227)
   (:w 35)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 2 0))
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux3")
   (:x 904)
   (:y 195)
   (:w 35)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 0))
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux1")
   (:x 875)
   (:y 227)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 7))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux2")
   (:x 378)
   (:y 299)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 8))
  (:box
   (:library "OMCS")
   (:type :function)
   (:reference (:symbol "PMC-ENGINE" "OMCS"))
   (:group-id nil)
   (:name "pmc-engine")
   (:x 318)
   (:y 339)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "S-SPACE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "heuristic-rules")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "fwc-rules")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "sols-mode")
     (:value :once)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rnd?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "print-fl")
     (:value t)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY11")
   (:x 884)
   (:y 370)
   (:w 153)
   (:h 61)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "POLY11")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:time-map (:list (:list -1000 0) (:list 0 7.5))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 2999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:lmidic (:list (:list 6000)))
            (:lonset (:list 0 3000))
            (:ldur (:list (:list 2999)))
            (:lvel (:list (:list 80)))
            (:loffset (:list (:list 0)))
            (:lchan (:list (:list 1)))
            (:lport (:list nil))
            (:llegato nil)
            (:tree (:list 1 (:list (:list (:list 3 4) (:list 3)))))
            (:tempo 60)))
          (:add-slots
           ((:lvel (:list (:list 80)))
            (:loffset (:list (:list 0)))
            (:lchan (:list (:list 1)))
            (:lport (:list nil)))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)))))
   (:id 10))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DECODE-STORED-SECTION" "RC"))
   (:group-id nil)
   (:name "decode-stored-section")
   (:x 848)
   (:y 318)
   (:w 148)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SECTION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "STORE-SECTION" "RC"))
   (:group-id nil)
   (:name "store-section")
   (:x 871)
   (:y 270)
   (:w 102)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINT1")
     (:value (:list 2 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINT2")
     (:value (:list 3 0))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-LOCK-TO-STORED" "RC"))
   (:group-id nil)
   (:name "r-lock-to-stored")
   (:x 727)
   (:y 137)
   (:w 115)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SECTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYERNR0")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "layernr1")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "layernr2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-LAYERORDER" "RC"))
   (:group-id nil)
   (:name "r-layerorder")
   (:x 643)
   (:y 100)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYER1")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER2")
     (:value 3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ENDTIME")
     (:value 5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 5)
   (:y 133)
   (:w 122)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 4 4) (:list 3 4) (:list 3 8) (:list 2 8)))
   (:id 15))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 97)
   (:y 440)
   (:w 405)
   (:h 87)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "POLY")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:time-map nil))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)))))
   (:id 16))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-HIERARCHY" "RC"))
   (:group-id nil)
   (:name "r-hierarchy")
   (:x 345)
   (:y 129)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYERHIGH")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYERLOW")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list121")
   (:x 78)
   (:y 89)
   (:w 159)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 5/4 5/4 5/4 5/4 5/4 5/4 5/4))
   (:id 18))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "PRESET-LAYER" "RC"))
   (:group-id nil)
   (:name "preset-layer")
   (:x 110)
   (:y 179)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHMSEQ")
     (:value (:list 1/4 1/4 1/4 1/4 1/4 1/4 1/4 1/4))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list12")
   (:x 195)
   (:y 133)
   (:w 131)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1) (:list 3/8) (:list 3/16) (:list 1/16)))
   (:id 20))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list2")
   (:x 229)
   (:y 179)
   (:w 77)
   (:h 61)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/16)
     (:list 1/8)
     (:list 3/16)
     (:list 1/20)
     (:list 5/24)
     (:list 1/12)))
   (:id 21))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "VOICE-DOMAIN" "RC"))
   (:group-id nil)
   (:name "voice-domain")
   (:x 122)
   (:y 251)
   (:w 104)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TIMESIGN-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMCELL-LIST1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmcell-list2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmcell-list3")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DECODE-ENGINE" "RC"))
   (:group-id nil)
   (:name "decode-engine")
   (:x 341)
   (:y 384)
   (:w 111)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "output")
     (:value (:symbol "VOICE" "RC"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-BEAT-SUBDIV" "RC"))
   (:group-id nil)
   (:name "r-beat-subdiv")
   (:x 471)
   (:y 67)
   (:w 103)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM-LAYER-NR")
     (:value 3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BEATVALUE1")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SUBDIV1")
     (:value (:list 1 2 3 4 5))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "beatvalue2")
     (:value 8)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "subdiv2")
     (:value (:list 1 2 3))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-HIERARCHY" "RC"))
   (:group-id nil)
   (:name "r-hierarchy")
   (:x 415)
   (:y 98)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYERHIGH")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYERLOW")
     (:value 3)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "R-EQLENGTH" "RC"))
   (:group-id nil)
   (:name "r-eqlength")
   (:x 535)
   (:y 105)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LAYER1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LAYER2")
     (:value 3)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :function)
   (:reference append)
   (:group-id nil)
   (:name "append")
   (:x 425)
   (:y 173)
   (:w 317)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "RULES->PMC" "RC"))
   (:group-id nil)
   (:name "rules->pmc")
   (:x 413)
   (:y 217)
   (:w 93)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:library "OMRC")
   (:type :function)
   (:reference (:symbol "DOMAINS->PMC" "RC"))
   (:group-id nil)
   (:name "domains->pmc")
   (:x 97)
   (:y 290)
   (:w 110)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "N-VAR")
     (:value 80)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 609)
   (:y 137)
   (:w 52)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:om-version 0.03)
     (:name "mypatch")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (857 582)) (:position (165 161)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:comment
       (:x 214)
       (:y 410)
       (:w 542)
       (:h 91)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "This rule check if the variable belongs to layer 2 or not. If not, it always gives true as an output (i.e. it will not affect other layers than number 2). If it does belong to layer 2, it checks if the element is identical to the one in layer 2 immediately before it. If it is identical, the output is false, otherwise true.

The rule will not allow repetitions of the same element in layer 2.")
       (:id 0))
      (:comment
       (:x 546)
       (:y 52)
       (:w 207)
       (:h 314)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Helvetica") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "A user defined rule always has 2 inputs. They are normally not accessed directly, but are used by the tools in the \"user rule tools\" menu to give the user access to different things. A basic example is the box \"get-this-cell\":

Get-this-cell only has 1 input, and it should be connected to the second input to the patch. It outputs the variable (i.e. the element from the domain) that is beeing checked at the moment. 

Get-last-cell has 2 inputs. They should be connected to the 2 inputs to the patch. It outputs the variable in the same layer as the one beeing checked at the moment, immediately before the one beeing checked. The engine has thus already accepted this variable as true according to all rules (but might now reconsider that decision...).

Get-layer-number outputs the layer number for the variable beeing checked.")
       (:id 1))
      (:comment
       (:x 323)
       (:y 55)
       (:w 191)
       (:h 43)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Helvetica") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "<-- The second input gives the variable beeing checked for the moment (as an object).")
       (:id 2))
      (:comment
       (:x 51)
       (:y 49)
       (:w 214)
       (:h 71)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Helvetica") (:size 10) (:style :plain)))
       (:align nil)
       (:text
        "<-- The first input gives the index  number for the variable the search engine is checking for the moment. This is used internally to keep track on where the engine is in the search.")
       (:id 3))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux")
       (:x 152)
       (:y 378)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 4))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 124)
       (:y 410)
       (:w 67)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "number")
       (:x 449)
       (:y 234)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 6))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 423)
       (:y 264)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "TEST-NOT-EQUAL" "RC"))
       (:group-id nil)
       (:name "test-not-equal")
       (:x 98)
       (:y 298)
       (:w 108)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "EV1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EV2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "GET-LAYERNUMBER" "RC"))
       (:group-id nil)
       (:name "get-layernumber")
       (:x 381)
       (:y 183)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "GET-LAST-CELL" "RC"))
       (:group-id nil)
       (:name "get-last-cell")
       (:x 24)
       (:y 183)
       (:w 95)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "INDEXX")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:library "OMRC")
       (:type :function)
       (:reference (:symbol "GET-THIS-CELL" "RC"))
       (:group-id nil)
       (:name "get-this-cell")
       (:x 205)
       (:y 183)
       (:w 95)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 45)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 123)
       (:y 486)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 13))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input1")
       (:x 267)
       (:y 42)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14)))
     (:connections
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 5 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 7 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 8 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 10 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:group-id nil)
   (:name "mypatch")
   (:x 595)
   (:y 41)
   (:w 80)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 31))
  (:comment
   (:x 518)
   (:y 486)
   (:w 120)
   (:h 40)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "doesn't work ?
=> see what is wrong...")
   (:id 32)))
 (:connections
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 13 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 12 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 9 :in 6))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 27 :in 6))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 27 :in 5))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 22 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 27 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 22 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 22 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 22 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 29 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 16 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 27 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 27 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 27 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 28 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 27 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 30 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))